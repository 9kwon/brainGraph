% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/permute_group.R
\name{permute.group}
\alias{permute.group}
\title{Permutation test for group difference of graph measures}
\usage{
permute.group(permSet, density, resids, level = c("graph", "vertex", "lobe"),
  atlas, atlas.dt = NULL, measure = c("btwn.cent", "vulnerability"))
}
\arguments{
\item{permSet}{The set of permutations to loop through (obtained from
\code{\link[permute]{shuffleSet}})}

\item{density}{Numeric; the density of the resultant graphs}

\item{resids}{A data table of the residuals (from \code{\link{get.resid}})}

\item{level}{A character string for the attribute level to calculate
differences; either 'graph', 'vertex', or 'lobe'}

\item{atlas}{Character string of the atlas name}

\item{atlas.dt}{A data table containing the specific atlas data}

\item{measure}{A character string, either 'btwn.cent' or 'vulnerability'
(specific to the vertex \emph{level})}
}
\value{
A data table with values for group differences in modularity, global
efficiency, clustering, average path length, and assortativity (etc.)
}
\description{
This function draws permutations from linear model residuals to determine the
significance of between-group differences of a global or vertex-wise graph
measure. This function is intended for cortical thickness networks (in which
there is only one graph per group), but is not restricted to that type of
data.
}
\details{
The \emph{graph} "level" will calculate modularity (Louvain algorithm),
clustering coefficient, average path length, degree assortativity, global
efficiency, lobe assortativity, and edge asymmetry.

The \emph{vertex} "level" will calculate either betweenness centrality or
vulnerability (of which only the maximum is taken, thus making this
technically a \emph{graph} level measure).

The \emph{lobe} "level" is intended to test for group differences in
inter-lobar connections, e.g. from the temporal lobe to the rest of the
brain.
}
\examples{
\dontrun{
m <- get.resid(all.thick, covars)
myPerms <- shuffleSet(n=nrow(m$resids), nset=1e3)
out <- permute.group(myPerms, densities, m$resids, 1e3, 'graph', atlas='dk',
   atlas.dt)
out <- permute.group(myPerms, densities, m$resids, 1e3, 'vertex')
}
}
\author{
Christopher G. Watson, \email{cgwatson@bu.edu}
}
\seealso{
\code{\link[igraph]{centr_betw}, \link{count_interlobar},
\link{edge_asymmetry}}
}

